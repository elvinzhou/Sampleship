{"version":3,"sources":["../node_modules/find-config/src sync","components/Login/login.js"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","ck","require","Login","class","clientId","REACT_APP_GOOGLE_CLIENT_ID","buttonText","onSuccess","AuthProvider","googleLogIn","onFailure","cookiePolicy","hosted_domain"],"mappings":"mFAAA,SAASA,EAAoBC,GAC5B,IAAIC,EAAI,IAAIC,MAAM,uBAAyBF,EAAM,KAEjD,MADAC,EAAEE,KAAO,mBACHF,EAEPF,EAAoBK,KAAO,WAAa,MAAO,IAC/CL,EAAoBM,QAAUN,EAC9BO,EAAOC,QAAUR,EACjBA,EAAoBS,GAAK,K,iCCRzB,wFAGMC,EAAKC,EAAQ,KAEJ,SAASC,IACxB,OACA,qBAAKC,MAAM,4CAAX,SACA,sBAAKA,MAAM,oBAAX,UACG,qBAAKA,MAAM,yCAAX,SACC,kDAGA,cAAC,IAAD,CACAC,SAAUJ,EAAGK,2BACbC,WAAW,qBACXC,UAAWC,IAAaC,YACxBC,UAAWF,IAAaC,YACxBE,aAAc,qBACdC,cAAe","file":"static/js/5.6e0aabeb.chunk.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 138;","import React from 'react';\r\nimport GoogleLogin from 'react-google-login';\r\nimport {AuthProvider} from '../AuthContext/authContext.js'\r\nconst ck = require('ckey');\r\n\r\nexport default function Login(){\r\nreturn (\r\n<div class=\"container centered justify-content-center\">\r\n<div class=\"col-xs-1 col-md-8\">\r\n   <div class=\"row text-center justify-content-center\">\r\n    <h1> Please Log In</h1>\r\n\r\n    </div>\r\n    <GoogleLogin\r\n    clientId={ck.REACT_APP_GOOGLE_CLIENT_ID}\r\n    buttonText=\"Log in with Google\"\r\n    onSuccess={AuthProvider.googleLogIn}\r\n    onFailure={AuthProvider.googleLogIn}\r\n    cookiePolicy={'single_host_origin'}\r\n    hosted_domain={'vibecartons.com'}\r\n/>\r\n    </div>\r\n    </div>\r\n  )\r\n  console.log(ck.REACT_APP_GOOGLE_CLIENT_ID)\r\n}\r\n//Use Auth Context instead\r\n/* const handleLogin = async googleData => {\r\n  const res = await fetch(\"/api/v1/auth/google\", {\r\n      method: \"POST\",\r\n      body: JSON.stringify({\r\n      token: googleData.tokenId\r\n    }),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      }\r\n    })\r\n    const data = await res.json()\r\n    // store returned user somehow\r\n  } */\r\n"],"sourceRoot":""}