{"version":3,"sources":["authenticated-app.js"],"names":["AuthenticatedApp","to","path","Ship","SampleReq","class","initialValues","firstName","lastName","email","semail","validationSchema","Yup","fname","max","required","lname","cemail","onSubmit","values","setSubmitting","fetch","method","body","JSON","stringify","then","res","alert","setTimeout","Item","name","htmlFor","type","addonBefore","TextArea","placeholder"],"mappings":"kGAAA,mHAKe,SAASA,IACxB,OACA,gCACA,8BACA,cAAC,IAAD,UACE,gCACE,8BACE,+BACE,6BACE,cAAC,IAAD,CAAMC,GAAG,IAAT,oBAEF,6BACC,cAAC,IAAD,CAAMA,GAAG,aAAT,kCAEA,6BACA,cAAC,IAAD,CAAMA,GAAG,QAAT,wCAIP,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAK,QAAZ,SACE,cAACC,EAAD,MAEF,cAAC,IAAD,CAAOD,KAAK,aAAZ,SACE,cAACE,EAAD,MAEF,cAAC,IAAD,CAAOF,KAAK,IAAZ,SACE,cAACF,EAAD,gBAMN,qBAAKK,MAAM,4CAAX,SACE,qBAAKA,MAAM,oBAAX,SACC,qBAAKA,MAAM,yCAAX,SACC,2EAOJ,SAASF,IACP,MACE,OAIJ,SAASC,IACP,OACE,qBAAKC,MAAM,4CAAX,SACA,qBAAKA,MAAM,oBAAX,SACG,sBAAKA,MAAM,yCAAX,UACC,kEACA,cAAC,IAAD,CACEC,cAAe,CAAEC,UAAW,GAAIC,SAAU,GAAIC,MAAO,GAAKC,OAAO,IACjEC,iBAAkBC,IAAW,CAC3BC,MAAOD,MACNE,IAAI,GAAI,iCACRC,SAAS,YACVC,MAAOJ,MACNE,IAAI,GAAI,iCACRC,SAAS,YACVE,OAAQL,MAAaH,MAAM,yBAAyBM,SAAS,YAC7DL,OAAQE,MAAaH,MAAM,yBAAyBM,SAAS,cAEnEG,SAAU,SAACC,EAAD,GAAgC,IAArBC,EAAoB,EAApBA,cACnBC,MAAM,qBAAqB,CACzBC,OAAO,OACPC,KAAMC,KAAKC,UAAUN,KACpBO,MAAK,SAAAC,GACNC,MAAMD,MAERE,YAAW,WACTD,MAAMJ,KAAKC,UAAUN,EAAQ,KAAM,IACnCC,GAAc,KACb,MAtBH,SAyBF,eAAC,IAAD,WACA,eAAC,IAAKU,KAAN,CAAWC,KAAK,QAAhB,UACE,uBAAOC,QAAQ,QAAf,wBACA,cAAC,IAAD,CAAOD,KAAK,QAAQE,KAAK,YAE3B,eAAC,IAAKH,KAAN,CAAWC,KAAK,QAAhB,UACE,uBAAOC,QAAQ,QAAf,uBACA,cAAC,IAAD,CAAOD,KAAK,QAAQE,KAAK,YAE3B,eAAC,IAAKH,KAAN,CAAWC,KAAK,SAAhB,UACE,uBAAOC,QAAQ,SAAf,oCACA,cAAC,IAAD,CAAOD,KAAK,SAASE,KAAK,aAE5B,eAAC,IAAKH,KAAN,CAAWC,KAAK,SAAhB,UACE,uBAAOC,QAAQ,SAAf,qCACA,cAAC,IAAD,CAAOD,KAAK,SAASE,KAAK,aAE1B,cAAC,IAAD,CACEC,YAAY,iBACZH,KAAK,kBAEP,cAAC,IAAD,CACEG,YAAY,iBACZH,KAAK,kBAEP,cAAC,IAAD,CACEG,YAAY,iBACZH,KAAK,kBAEP,cAAC,IAAD,CACEG,YAAY,OACZH,KAAK,iBAEP,cAAC,IAAD,CACEG,YAAY,QACZH,KAAK,kBAEP,cAAC,IAAD,CACEG,YAAY,WACZH,KAAK,gBAEP,cAAC,IAAMI,SAAP,CAAgBJ,KAAK,UAAUK,YAAY,sBAzC7C,2DA6CE,wBAAQH,KAAK,SAAb","file":"static/js/6.ffef4a49.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Formik} from 'formik';\r\nimport * as Yup from 'yup';\r\nimport {Router, Switch, Route, Link} from 'react-router-dom'\r\nimport { Form, Input, InputNumber, Checkbox } from 'formik-antd'\r\nexport default function AuthenticatedApp(){\r\nreturn (\r\n<div>\r\n<div>\r\n<Router>\r\n  <div>\r\n    <nav>\r\n      <ul>\r\n        <li>\r\n          <Link to=\"/\">Home</Link>\r\n        </li>\r\n        <li>\r\n         <Link to=\"/samplereq\">New Sample Request</Link>\r\n         </li>\r\n         <li>\r\n         <Link to=\"/ship\">Outstanding Request</Link>\r\n         </li>\r\n        </ul>\r\n      </nav>\r\n  <Switch>\r\n    <Route path=\"/ship\">\r\n      <Ship />\r\n    </Route>\r\n    <Route path=\"/samplereq\">\r\n      <SampleReq />\r\n    </Route>\r\n    <Route path=\"/\">\r\n      <AuthenticatedApp />\r\n    </Route>\r\n  </Switch>\r\n</div>\r\n</Router>\r\n</div>\r\n<div class=\"container centered justify-content-center\">\r\n  <div class=\"col-xs-1 col-md-8\">\r\n   <div class=\"row text-center justify-content-center\">\r\n    <h1> Internal Sample Request System </h1>\r\n    </div>\r\n  </div>\r\n</div>\r\n</div>\r\n)}\r\n\r\nfunction Ship(){\r\n  return(\r\n    \"todo\"\r\n  )\r\n}\r\n\r\nfunction SampleReq(){\r\n  return(\r\n    <div class=\"container centered justify-content-center\">\r\n    <div class=\"col-xs-1 col-md-8\">\r\n       <div class=\"row text-center justify-content-center\">\r\n        <h1> Internal Sample Request System </h1>\r\n        <Formik\r\n          initialValues={{ firstName: '', lastName: '', email: '' , semail:''}}\r\n          validationSchema={Yup.object({\r\n            fname: Yup.string()\r\n            .max(15, 'Must be 15 characters or less')\r\n            .required('Required'),\r\n            lname: Yup.string()\r\n            .max(20, 'Must be 20 characters or less')\r\n            .required('Required'),\r\n            cemail: Yup.string().email('Invalid email address').required('Required'),\r\n            semail: Yup.string().email('Invalid email address').required('Required'),\r\n          })}\r\n      onSubmit={(values, { setSubmitting }) => {\r\n        fetch(\"/api/samplereqpost\",{\r\n          method:\"POST\",\r\n          body: JSON.stringify(values)\r\n        }).then(res => {\r\n          alert(res);\r\n        });\r\n        setTimeout(() => {\r\n          alert(JSON.stringify(values, null, 2));\r\n          setSubmitting(false);\r\n        }, 400);\r\n      }}\r\n    >\r\n      <Form>\r\n      <Form.Item name='fname'>\r\n        <label htmlFor=\"fname\">First Name</label>\r\n        <Input name=\"fname\" type=\"text\" />\r\n      </Form.Item>\r\n      <Form.Item name='lname'>\r\n        <label htmlFor=\"lname\">Last Name</label>\r\n        <Input name=\"lname\" type=\"text\" />\r\n      </Form.Item>\r\n      <Form.Item name='cemail'>\r\n        <label htmlFor=\"cemail\">Customer Email Address</label>\r\n        <Input name=\"cemail\" type=\"email\" />\r\n      </Form.Item>\r\n      <Form.Item name='semail'>\r\n        <label htmlFor=\"semail\">Sales Rep Email Address</label>\r\n        <Input name=\"semail\" type=\"email\" />\r\n      </Form.Item>\r\n        <Input\r\n          addonBefore=\"Address Line 1\"\r\n          name=\"address.line1\"\r\n        />\r\n        <Input\r\n          addonBefore=\"Address Line 2\"\r\n          name=\"address.line2\"\r\n        />\r\n        <Input\r\n          addonBefore=\"Address Line 3\"\r\n          name=\"address.line3\"\r\n        />\r\n        <Input\r\n          addonBefore=\"city\"\r\n          name=\"address.city\"\r\n        />\r\n        <Input\r\n          addonBefore=\"State\"\r\n          name=\"address.state\"\r\n        />\r\n        <Input\r\n          addonBefore=\"Zip Code\"\r\n          name=\"address.zip\"\r\n        />\r\n        <Input.TextArea name=\"samples\" placeholder=\"Requested Samples\" />\r\n\r\n        // We'll use this later, for now, text area will be fine\r\n\r\n        <button type=\"submit\">Submit</button>\r\n      </Form>\r\n    </Formik>\r\n        </div>\r\n        </div>\r\n        </div>\r\n    )}\r\n"],"sourceRoot":""}