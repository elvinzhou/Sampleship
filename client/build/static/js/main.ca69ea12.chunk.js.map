{"version":3,"sources":["components/lib.js","authenticated-app.js","App.js","index.js","components/AuthContext/authContext.js"],"names":["FullPageSpinner","css","fontSize","height","display","flexDirection","justifyContent","alignItems","Spinner","spin","keyframes","transform","FaSpinner","animation","defaultProps","AuthenticatedApp","class","to","path","Ship","SampleReq","Home","handleSubmit","values","a","setSubmitting","console","log","JSON","stringify","fetch","method","body","then","res","alert","setTimeout","className","initialValues","fname","lname","cemail","semail","validationSchema","Yup","max","required","email","onSubmit","Item","name","type","placeholder","addonBefore","TextArea","defaultPickerValue","moment","Login","React","App","user","useAuthState","fallback","ReactDOM","render","document","getElementById","AuthContext","createContext","AuthProvider","props","useSWR","data","error","mutate","googleLogIn","googleData","token","tokenId","headers","json","Error","history","push","logOut","Provider","value","state","useContext","isPending","status","isError","isSuccess","isAuthenticated"],"mappings":"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","file":"static/js/main.ca69ea12.chunk.js","sourcesContent":["import {FaSpinner} from 'react-icons/fa'\r\nimport styled from '@emotion/styled/macro'\r\nimport {keyframes} from '@emotion/react'\r\n\r\nexport default function FullPageSpinner() {\r\n  return (\r\n    <div\r\n      css={{\r\n        fontSize: '4em',\r\n        height: '100vh',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n      }}\r\n    >\r\n      <Spinner />\r\n    </div>\r\n  )\r\n}\r\n\r\nconst spin = keyframes({\r\n  '0%': {transform: 'rotate(0deg)'},\r\n  '100%': {transform: 'rotate(360deg)'},\r\n})\r\n\r\n\r\nconst Spinner = styled(FaSpinner)({\r\n  animation: `${spin} 1s linear infinite`,\r\n})\r\nSpinner.defaultProps = {\r\n  'aria-label': 'loading',\r\n}\r\n","import React from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { BrowserRouter as Router, Switch, Route, Link} from 'react-router-dom';\r\nimport { Form, Input, InputNumber, Checkbox, DatePicker } from 'formik-antd';\r\nimport moment from 'moment';\r\n\r\nexport default function AuthenticatedApp() {\r\n  return (\r\n          <Router>\r\n            <div>\r\n                <nav class=\"navbar navbar-expand-lg\">\r\n                  <ul class=\"navbar-nav mr-auto\">\r\n                     <li class=\"nav-item\">\r\n                        <Link to=\"/\">\r\n                        Home</Link>\r\n                      </li>\r\n                     <li class=\"nav-item\">\r\n                       <Link to=\"/samplereq\">\r\n                        New Sample Request</Link>\r\n                      </li>\r\n                      <li class=\"nav-item\">\r\n                        <Link to=\"/ship\">\r\n                        Outstanding Requests</Link>\r\n                      </li>\r\n                  </ul>\r\n                </nav>\r\n                <Switch>\r\n                  <Route path=\"/ship\">\r\n                      <Ship />\r\n                  </Route>\r\n                 <Route path=\"/samplereq\">\r\n                      <SampleReq />\r\n                  </Route>\r\n                 <Route path=\"/\">\r\n                      <Home />\r\n                  </Route>\r\n                </Switch>\r\n            </div>\r\n          </Router>\r\n );\r\n}\r\n\r\nfunction Home() {\r\n  return (\r\n  <div class=\"container centered justify-content-center\">\r\n      <div class=\"col-xs-1 col-md-8\">\r\n        <div class=\"row text-center justify-content-center\">\r\n            <h1> Internal Sample Request System </h1>\r\n        </div>\r\n      </div>\r\n  </div>\r\n);\r\n}\r\n\r\nfunction Ship() {\r\n  return (\r\n    \"todo\"\r\n  );\r\n}\r\n\r\nfunction SampleReq() {\r\n  const handleSubmit = async (values, { setSubmitting }) => {\r\n    console.log(JSON.stringify(values));\r\n    await fetch(\"/api/samplereqpost\",{\r\n      method:\"POST\",\r\n      body: JSON.stringify(values)\r\n    }).then(res => {\r\n      alert(res);\r\n    });\r\n    setTimeout(() => {\r\n      alert(JSON.stringify(values, null, 2));\r\n      setSubmitting(false);\r\n    }, 400);\r\n  }\r\n  return (\r\n   <div className=\"container centered justify-content-center\">\r\n    <div className=\"col-xs-1 col-md-8\">\r\n       <div className=\"row text-center justify-content-center\">\r\n        <h1> New Sample Request </h1>\r\n        <Formik\r\n          initialValues={{ fname: '', lname: '', cemail: '' , semail:''}}\r\n          validationSchema={Yup.object({\r\n            fname: Yup.string()\r\n            .max(15, 'Must be 15 characters or less')\r\n            .required('Required'),\r\n            lname: Yup.string()\r\n            .max(20, 'Must be 20 characters or less')\r\n            .required('Required'),\r\n            cemail: Yup.string().email('Invalid email address').required('Required'),\r\n            semail: Yup.string().email('Invalid email address').required('Required'),\r\n          })}\r\n      onSubmit={handleSubmit}\r\n    >\r\n      <Form>\r\n      <Form.Item name='fname'>\r\n        <Input name=\"fname\" type=\"text\" placeholder=\"First Name\"/>\r\n      </Form.Item>\r\n      <Form.Item name='lname'>\r\n        <Input name=\"lname\" type=\"text\" placeholder=\"Last Name\" />\r\n      </Form.Item>\r\n      <Form.Item name='cemail'>\r\n        <Input name=\"cemail\" type=\"email\" placeholder=\"Customer Email\"/>\r\n      </Form.Item>\r\n      <Form.Item name='semail'>\r\n        <Input name=\"semail\" type=\"email\" placeholder=\"Sales Rep Email\" />\r\n      </Form.Item>\r\n        <Input\r\n          addonBefore=\"Address Line 1\"\r\n          name=\"address.line1\"\r\n        />\r\n        <Input\r\n          addonBefore=\"Address Line 2\"\r\n          name=\"address.line2\"\r\n        />\r\n        <Input\r\n          addonBefore=\"Address Line 3\"\r\n          name=\"address.line3\"\r\n        />\r\n        <Input\r\n          addonBefore=\"city\"\r\n          name=\"address.city\"\r\n        />\r\n        <Input\r\n          addonBefore=\"State\"\r\n          name=\"address.state\"\r\n        />\r\n        <Input\r\n          addonBefore=\"Zip Code\"\r\n          name=\"address.zip\"\r\n        />\r\n        <Input.TextArea name=\"samples\" placeholder=\"Requested Samples\" />\r\n        <DatePicker\r\n        name=\"date\"\r\n        defaultPickerValue={moment()}\r\n        placeholder=\"Required by Date\"\r\n        />\r\n        <button type=\"submit\">Submit</button>\r\n      </Form>\r\n    </Formik>\r\n        </div>\r\n        </div>\r\n        </div>\r\n    );\r\n  }\r\n","import './App.css';\r\nimport * as React from 'react';\r\nimport {useAuthState} from './components/AuthContext/authContext.js'\r\nimport FullPageSpinner from './components/lib.js'\r\nimport AuthenticatedApp from './authenticated-app'\r\nconst Login = React.lazy(() => import('./components/Login/login'))\r\nfunction App() {\r\n  const user = useAuthState();\r\n    return (\r\n      <React.Suspense fallback={<FullPageSpinner />}>\r\n        {user ? <AuthenticatedApp /> : <Login />}\r\n      </React.Suspense>\r\n    )  }\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {AuthProvider} from './components/AuthContext/authContext.js'\n\nReactDOM.render(\n  <AuthProvider>\n      <App />\n  </AuthProvider>,\n  document.getElementById('root'),\n);\n","import React, { createContext, useContext } from \"react\"\r\nimport useSWR from \"swr\"\r\n\r\nconst AuthContext = createContext();\r\n\r\nfunction AuthProvider (props) {\r\n\r\n    const { data, error, mutate } = useSWR(`/api/v1/auth/me`)\r\n\r\n    const googleLogIn = async googleData => {\r\n        const res = await fetch(\"/api/v1/auth/google\", {\r\n            method: \"POST\",\r\n            body: JSON.stringify({\r\n                token: googleData.tokenId\r\n            }),\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            }\r\n        })\r\n        const data = await res.json()\r\n        if(data.error) throw new Error(data.error)\r\n        mutate()\r\n        this.props.history.push('/')\r\n    }\r\n\r\n    const logOut = async () => {\r\n        await fetch(\"/api/v1/auth/logout\", {\r\n            method: \"DELETE\"\r\n        })\r\n        mutate()\r\n    }\r\n\r\n    return(\r\n        <AuthContext.Provider value={{\r\n            user: data,\r\n            error: error,\r\n            googleLogIn: googleLogIn,\r\n            logOut: logOut\r\n        }} {...props}/>\r\n    )\r\n}\r\n\r\nfunction useAuthState() {\r\n  const state = React.useContext(AuthContext)\r\n  const isPending = state.status === 'pending'\r\n  const isError = state.status === 'error'\r\n  const isSuccess = state.status === 'success'\r\n  const isAuthenticated = state.user && isSuccess\r\n  return {\r\n    ...state,\r\n    isPending,\r\n    isError,\r\n    isSuccess,\r\n    isAuthenticated,\r\n  }\r\n}\r\n\r\nexport {AuthProvider, useAuthState}\r\n"],"sourceRoot":""}